{"version":3,"file":"js/friends.bundle.js","mappings":"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","sources":["webpack://social-network-lab3-etu-2/webpack/runtime/chunk loaded","webpack://social-network-lab3-etu-2/./src/ts/api.ts","webpack://social-network-lab3-etu-2/./src/ts/utils.ts","webpack://social-network-lab3-etu-2/./src/ts/friends.ts","webpack://social-network-lab3-etu-2/webpack/bootstrap","webpack://social-network-lab3-etu-2/webpack/runtime/hasOwnProperty shorthand","webpack://social-network-lab3-etu-2/webpack/runtime/jsonp chunk loading","webpack://social-network-lab3-etu-2/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// API module for making HTTP requests\nexport interface User {\n  id: number;\n  firstName: string;\n  lastName: string;\n  middleName: string;\n  dateOfBirth: string;\n  email: string;\n  photo: string;\n  role: 'admin' | 'user';\n  status: 'active' | 'blocked' | 'unconfirmed';\n}\n\nexport interface News {\n  id: number;\n  userId: number;\n  title: string;\n  content: string;\n  image?: string;\n  createdAt: string;\n  status: 'active' | 'blocked';\n}\n\n\nconst API_BASE = '/api';\n\n// Generic fetch wrapper with error handling\nasync function fetchJSON<T>(url: string, options?: RequestInit): Promise<T> {\n  try {\n    const response = await fetch(url, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options?.headers,\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error;\n  }\n}\n\n// Users API\nexport const usersAPI = {\n  getAll: (): Promise<User[]> => fetchJSON(`${API_BASE}/users`),\n  \n  getById: (id: number): Promise<User> => fetchJSON(`${API_BASE}/users/${id}`),\n  \n  create: (data: Partial<User>): Promise<User> =>\n    fetchJSON(`${API_BASE}/users`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n  \n  update: (id: number, data: Partial<User>): Promise<User> =>\n    fetchJSON(`${API_BASE}/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    }),\n  \n  delete: (id: number): Promise<{ message: string }> =>\n    fetchJSON(`${API_BASE}/users/${id}`, {\n      method: 'DELETE',\n    }),\n  \n  getFriends: (id: number): Promise<User[]> =>\n    fetchJSON(`${API_BASE}/users/${id}/friends`),\n  \n};\n\n// News API\nexport const newsAPI = {\n  getAll: (): Promise<News[]> => fetchJSON(`${API_BASE}/news`),\n  \n  getFriendsNews: (userId: number): Promise<News[]> =>\n    fetchJSON(`${API_BASE}/users/${userId}/friends-news`),\n  \n  create: (data: Partial<News>): Promise<News> =>\n    fetchJSON(`${API_BASE}/news`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n  \n  updateStatus: (id: number, status: 'active' | 'blocked'): Promise<News> =>\n    fetchJSON(`${API_BASE}/news/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({ status }),\n    }),\n  \n  delete: (id: number): Promise<{ message: string }> =>\n    fetchJSON(`${API_BASE}/news/${id}`, {\n      method: 'DELETE',\n    }),\n};\n\n\n// Friends API\nexport const friendsAPI = {\n  add: (userId: number, friendId: number): Promise<{ message: string }> =>\n    fetchJSON(`${API_BASE}/users/${userId}/friends`, {\n      method: 'POST',\n      body: JSON.stringify({ friendId }),\n    }),\n  \n  remove: (userId: number, friendId: number): Promise<{ message: string }> =>\n    fetchJSON(`${API_BASE}/users/${userId}/friends/${friendId}`, {\n      method: 'DELETE',\n    }),\n};\n\n","// Utility functions using ES6+ features\n\n// Format date to readable string\nexport const formatDate = (dateString: string): string => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('ru-RU', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n};\n\n// Format datetime to readable string\nexport const formatDateTime = (dateString: string): string => {\n  const date = new Date(dateString);\n  return date.toLocaleString('ru-RU', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n};\n\n// Get status label in Russian\nexport const getStatusLabel = (status: string): string => {\n  const labels: Record<string, string> = {\n    active: 'Активный',\n    blocked: 'Заблокирован',\n    unconfirmed: 'Не подтверждён',\n  };\n  return labels[status] || status;\n};\n\n// Get role label in Russian\nexport const getRoleLabel = (role: string): string => {\n  const labels: Record<string, string> = {\n    admin: 'Администратор',\n    user: 'Пользователь',\n  };\n  return labels[role] || role;\n};\n\n// Show notification using Bootstrap toast or alert\nexport const showNotification = (message: string, type: 'success' | 'error' | 'info' = 'success'): void => {\n  const alertClass = type === 'error' ? 'danger' : type;\n  const alert = document.createElement('div');\n  alert.className = `alert alert-${alertClass} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`;\n  alert.style.zIndex = '9999';\n  alert.innerHTML = `\n    ${message}\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n  `;\n  \n  document.body.appendChild(alert);\n  \n  setTimeout(() => {\n    alert.remove();\n  }, 3000);\n};\n\n// Debounce function for performance\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: ReturnType<typeof setTimeout> | null = null;\n  \n  return (...args: Parameters<T>) => {\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n// Get full name from user object\nexport const getFullName = (user: { firstName: string; lastName: string; middleName?: string }): string => {\n  const parts = [user.lastName, user.firstName];\n  if (user.middleName) parts.push(user.middleName);\n  return parts.join(' ');\n};\n\n// Navigate to page\nexport const navigateTo = (path: string): void => {\n  window.location.href = path;\n};\n\n// Get URL parameter\nexport const getUrlParameter = (name: string): string | null => {\n  const params = new URLSearchParams(window.location.search);\n  return params.get(name);\n};\n\n// Confirm action with modal\n// Custom confirmation modal\nlet confirmModal: any;\nlet confirmResolve: ((value: boolean) => void) | null = null;\n\nconst initConfirmModal = (): void => {\n  if (confirmModal) return;\n  \n  // Create modal HTML\n  const modalHTML = `\n    <div class=\"modal fade\" id=\"confirmModal\" tabindex=\"-1\">\n      <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content confirm-modal-content\">\n          <div class=\"modal-header confirm-modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"fas fa-exclamation-triangle me-2\"></i>\n              Подтверждение действия\n            </h5>\n          </div>\n          <div class=\"modal-body confirm-modal-body\">\n            <p id=\"confirmModalMessage\"></p>\n          </div>\n          <div class=\"modal-footer confirm-modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"confirmModalCancel\">\n              <i class=\"fas fa-times me-2\"></i>\n              Отмена\n            </button>\n            <button type=\"button\" class=\"btn btn-danger\" id=\"confirmModalConfirm\">\n              <i class=\"fas fa-check me-2\"></i>\n              Подтвердить\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n  \n  // Add to body if not exists\n  if (!document.getElementById('confirmModal')) {\n    document.body.insertAdjacentHTML('beforeend', modalHTML);\n  }\n  \n  // Initialize Bootstrap modal\n  if (typeof (window as any).bootstrap !== 'undefined') {\n    confirmModal = new (window as any).bootstrap.Modal(document.getElementById('confirmModal'));\n  }\n  \n  // Setup event listeners\n  document.getElementById('confirmModalCancel')?.addEventListener('click', () => {\n    confirmModal?.hide();\n    if (confirmResolve) {\n      confirmResolve(false);\n      confirmResolve = null;\n    }\n  });\n  \n  document.getElementById('confirmModalConfirm')?.addEventListener('click', () => {\n    confirmModal?.hide();\n    if (confirmResolve) {\n      confirmResolve(true);\n      confirmResolve = null;\n    }\n  });\n  \n  // Handle backdrop click\n  document.getElementById('confirmModal')?.addEventListener('hidden.bs.modal', () => {\n    if (confirmResolve) {\n      confirmResolve(false);\n      confirmResolve = null;\n    }\n  });\n};\n\n// Confirm action with custom modal\nexport const confirmAction = (message: string): Promise<boolean> => {\n  return new Promise((resolve) => {\n    initConfirmModal();\n    \n    const messageElement = document.getElementById('confirmModalMessage');\n    if (messageElement) {\n      messageElement.textContent = message;\n    }\n    \n    confirmResolve = resolve;\n    confirmModal?.show();\n  });\n};\n\n","// Friends page module\nimport '../styles/main.scss';\nimport { usersAPI, friendsAPI, type User } from './api.js';\nimport { getFullName, showNotification, confirmAction } from './utils.js';\n\ndeclare const bootstrap: any;\n\nlet currentUserId: number;\nlet currentFriends: User[] = [];\nlet allUsers: User[] = [];\nlet addFriendModal: any;\n\n// Initialize page\nconst init = async (): Promise<void> => {\n  try {\n    // Get user ID from URL\n    const pathParts = window.location.pathname.split('/');\n    currentUserId = parseInt(pathParts[pathParts.length - 1]);\n    \n    if (isNaN(currentUserId)) {\n      showNotification('Неверный ID пользователя', 'error');\n      return;\n    }\n    \n    await loadUser();\n    await loadFriends();\n    await loadAllUsers();\n    \n    addFriendModal = new bootstrap.Modal(document.getElementById('addFriendModal'));\n    setupGlobalFunctions();\n  } catch (error) {\n    console.error('Initialization error:', error);\n    showNotification('Ошибка инициализации страницы', 'error');\n  }\n};\n\n// Load user info\nconst loadUser = async (): Promise<void> => {\n  try {\n    const user = await usersAPI.getById(currentUserId);\n    const nameElement = document.getElementById('user-name');\n    if (nameElement) {\n      nameElement.textContent = `Друзья пользователя: ${getFullName(user)}`;\n    }\n  } catch (error) {\n    console.error('Error loading user:', error);\n    showNotification('Ошибка загрузки информации о пользователе', 'error');\n  }\n};\n\n// Load all users for search\nconst loadAllUsers = async (): Promise<void> => {\n  try {\n    allUsers = await usersAPI.getAll();\n  } catch (error) {\n    console.error('Error loading users:', error);\n  }\n};\n\n// Load friends list\nconst loadFriends = async (): Promise<void> => {\n  const container = document.getElementById('friends-container');\n  if (!container) return;\n  \n  try {\n    currentFriends = await usersAPI.getFriends(currentUserId);\n    renderFriends(currentFriends);\n  } catch (error) {\n    console.error('Error loading friends:', error);\n    container.innerHTML = '<div class=\"alert alert-danger\">Ошибка загрузки списка друзей</div>';\n  }\n};\n\n// Render friends list\nconst renderFriends = (friends: User[]): void => {\n  const container = document.getElementById('friends-container');\n  if (!container) return;\n  \n  if (friends.length === 0) {\n    container.innerHTML = '<div class=\"alert alert-info\">У этого пользователя пока нет друзей</div>';\n    return;\n  }\n  \n  container.innerHTML = friends.map(friend => `\n    <div class=\"friend-card\" data-status=\"${friend.status}\">\n      <img src=\"${friend.photo}\" alt=\"${getFullName(friend)}\" class=\"friend-avatar\">\n      <div class=\"friend-info\">\n        <div class=\"friend-name\">${getFullName(friend)}</div>\n        <div class=\"friend-email\">\n          <i class=\"fas fa-envelope\"></i> ${friend.email}\n        </div>\n        <div class=\"friend-badges\">\n          <span class=\"badge-status ${friend.status}\">${getStatusLabel(friend.status)}</span>\n        </div>\n      </div>\n      <div class=\"friend-actions\">\n        <button class=\"btn btn-success btn-sm\" onclick=\"viewNews(${friend.id})\">\n          <i class=\"fas fa-newspaper\"></i> Новости\n        </button>\n        <button class=\"btn btn-danger btn-sm\" onclick=\"removeFriend(${friend.id})\">\n          <i class=\"fas fa-user-times\"></i> Удалить\n        </button>\n      </div>\n    </div>\n  `).join('');\n};\n\n// Get status label\nconst getStatusLabel = (status: string): string => {\n  const labels: Record<string, string> = {\n    active: 'Активный',\n    blocked: 'Заблокирован',\n    unconfirmed: 'Не подтверждён',\n  };\n  return labels[status] || status;\n};\n\n// Search users for adding as friends\nconst searchUsers = (): void => {\n  const searchInput = (document.getElementById('searchFriend') as HTMLInputElement);\n  const query = searchInput?.value.toLowerCase() || '';\n  const container = document.getElementById('available-users');\n  \n  if (!container) return;\n  \n  if (query.length < 2) {\n    container.innerHTML = '<p class=\"text-muted\">Введите минимум 2 символа для поиска...</p>';\n    return;\n  }\n  \n  // Filter users: exclude current user and already friends\n  const friendIds = currentFriends.map(f => f.id);\n  const availableUsers = allUsers.filter(user => {\n    if (user.id === currentUserId) return false;\n    if (friendIds.includes(user.id)) return false;\n    \n    const fullName = getFullName(user).toLowerCase();\n    const email = user.email.toLowerCase();\n    return fullName.includes(query) || email.includes(query);\n  });\n  \n  if (availableUsers.length === 0) {\n    container.innerHTML = '<p class=\"text-muted\">Пользователи не найдены</p>';\n    return;\n  }\n  \n  container.innerHTML = availableUsers.map(user => `\n    <div class=\"user-search-item\">\n      <img src=\"${user.photo}\" alt=\"${getFullName(user)}\" class=\"user-search-avatar\">\n      <div class=\"user-search-info\">\n        <div class=\"user-search-name\">${getFullName(user)}</div>\n        <div class=\"user-search-email\">${user.email}</div>\n      </div>\n      <button class=\"btn btn-primary btn-sm\" onclick=\"addFriend(${user.id})\">\n        <i class=\"fas fa-plus\"></i> Добавить\n      </button>\n    </div>\n  `).join('');\n};\n\n// Add friend\nconst addFriend = async (friendId: number): Promise<void> => {\n  try {\n    await friendsAPI.add(currentUserId, friendId);\n    showNotification('Друг успешно добавлен', 'success');\n    addFriendModal.hide();\n    \n    // Clear search\n    (document.getElementById('searchFriend') as HTMLInputElement).value = '';\n    (document.getElementById('available-users') as HTMLElement).innerHTML = '<p class=\"text-muted\">Начните вводить для поиска пользователей...</p>';\n    \n    await loadFriends();\n  } catch (error) {\n    console.error('Error adding friend:', error);\n    showNotification('Ошибка добавления друга', 'error');\n  }\n};\n\n// Remove friend\nconst removeFriend = async (friendId: number): Promise<void> => {\n  const confirmed = await confirmAction('Вы уверены, что хотите удалить этого друга?');\n  if (!confirmed) return;\n  \n  try {\n    await friendsAPI.remove(currentUserId, friendId);\n    showNotification('Друг успешно удалён', 'success');\n    await loadFriends();\n  } catch (error) {\n    console.error('Error removing friend:', error);\n    showNotification('Ошибка удаления друга', 'error');\n  }\n};\n\n// Setup global functions\nconst setupGlobalFunctions = (): void => {\n  (window as any).searchUsers = searchUsers;\n  (window as any).addFriend = addFriend;\n  (window as any).removeFriend = removeFriend;\n  (window as any).goBackToUsers = () => {\n    const isWebpack = window.location.pathname.includes('webpack');\n    window.location.href = isWebpack ? '/webpack-users' : '/users';\n  };\n  (window as any).viewFriends = (userId: number) => {\n    const isWebpack = window.location.pathname.includes('webpack');\n    window.location.href = isWebpack ? `/webpack-friends/${userId}` : `/friends/${userId}`;\n  };\n  (window as any).viewNews = (userId: number) => {\n    const isWebpack = window.location.pathname.includes('webpack');\n    window.location.href = isWebpack ? `/webpack-news/${userId}` : `/news/${userId}`;\n  };\n};\n\n// Initialize on DOM ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  init();\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t814: 0,\n\t177: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksocial_network_lab3_etu_2\"] = self[\"webpackChunksocial_network_lab3_etu_2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [177], () => (__webpack_require__(849)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","API_BASE","fetchJSON","url","options","response","fetch","Object","assign","headers","ok","Error","status","json","error","console","usersAPI","getAll","id","friendsAPI","add","userId","friendId","method","body","JSON","stringify","remove","showNotification","message","type","alertClass","alert","document","createElement","className","style","zIndex","innerHTML","appendChild","setTimeout","getFullName","user","parts","lastName","firstName","middleName","push","join","confirmModal","confirmResolve","confirmAction","Promise","resolve","initConfirmModal","getElementById","insertAdjacentHTML","window","bootstrap","Modal","_a","addEventListener","hide","_b","_c","messageElement","textContent","show","currentUserId","addFriendModal","currentFriends","allUsers","init","__awaiter","pathParts","location","pathname","split","parseInt","length","isNaN","loadUser","loadFriends","loadAllUsers","setupGlobalFunctions","nameElement","container","renderFriends","friends","map","friend","photo","email","getStatusLabel","active","blocked","unconfirmed","searchUsers","searchInput","query","value","toLowerCase","friendIds","f","availableUsers","filter","includes","fullName","addFriend","removeFriend","goBackToUsers","isWebpack","href","viewFriends","viewNews","readyState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","o","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}